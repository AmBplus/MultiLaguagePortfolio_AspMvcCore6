@using Settings
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.Extensions.Options.IOptions<ApplicationSettings>? ApplicationSettings 
@{
    if(ApplicationSettings == null || ApplicationSettings.Value == null || ApplicationSettings?.Value?.CultureSettings?.SupportedCultureNames==null )return;
    var cultureName = System.Threading.Thread.CurrentThread.CurrentUICulture.Name;
    var supportedCulture = ApplicationSettings.Value.CultureSettings.SupportedCultureNames?.ToList();
}

    @foreach (var country  in supportedCulture!)
    {
        @if (country!= cultureName)
        {
            var countryTwoFirstLetter = country[(country.IndexOf('-')+1)..];
            RegionInfo ri = new RegionInfo(countryTwoFirstLetter); 
            <a asp-controller="ChangeCulture" asp-action="Index" asp-route-name="@country" class="nav-link text-white text-center fw-bold">
                @(ri.NativeName)
                <span class="fi fi-@countryTwoFirstLetter.ToLower()"></span>
            </a>
        }
    }
